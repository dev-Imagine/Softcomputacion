@{
    ViewBag.Title = "Nueva venta";
    Layout = "~/Views/Shared/_UsuarioLogueado.cshtml";
    List<softcomputacion.Models.categoria> lstCategorias = (List<softcomputacion.Models.categoria>)ViewBag.lstCategorias;
    List<softcomputacion.Models.estado> lstEstados = (List<softcomputacion.Models.estado>)ViewBag.lstEstados;
    string[] filtros = ViewBag.filtros.Split(';');
    string stColorStock = "";
    double ValorUSD = (double)ViewBag.ValorUSD;
    softcomputacion.Models.usuario oUsuario = (softcomputacion.Models.usuario)Session["Usuario"];

}


@model PagedList.IPagedList<softcomputacion.Models.producto>
@using PagedList.Mvc;

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryFormPopup" }))
{
    @Html.AntiForgeryToken()
}

<br />
<br />
<div class="container-fluid">
    <div class="row">
        <div class="col-12 text-center">
            <h2>Nueva venta</h2>
        </div>
        <div class="col-12 position-absolute text-right">
            <button class="btn btn-dark" onclick="location.href='@Url.Action("ListarVentas","Venta")'"><i class="fas fa-list-ul"></i> Lista ventas</button>
        </div>
    </div>
    
    <hr style="border-top: 2px solid #b5262a;" />
    <div class="row">
        <div class="col-12 col-lg-12">
            <div class="row">
                <div class="col-12 col-lg-12">
                    @* Form de busqueda *@
                    <form method="post" action="@Url.Action("NuevaVenta", "Venta")" autocomplete="off">
                        <div class="row">
                            <div class="col-12 col-md-6 col-lg-1">
                                <div class="wrap-input100 m-b-20">
                                    <input class="input100" type="number" name="idProducto" placeholder="Código">
                                </div>
                            </div>
                            <div class="col-12 col-md-6 col-lg-4">
                                <div class="wrap-input100 m-b-20">
                                    <input class="input100" type="text" name="nombreProducto" placeholder="Nombre del producto" value="@filtros[0]">
                                </div>
                            </div>
                            <div class="col-12 col-md-6 col-lg-2">
                                <div class="wrap-input100 ¡ m-b-20" data-validate="">
                                    <select id="select-Categorias" onchange="CargarComboSubcategoria()" onload="CargarComboSubcategoria()" class="form-control input100" style="border:0px; height: 55px;" name="idCategoria">
                                        <option selected value="0">Categoría</option>

                                        @foreach (softcomputacion.Models.categoria oCategoria in lstCategorias)
                                        {
                                            if (oCategoria.idCategoria.ToString() == filtros[1])
                                            {
                                                <option selected value="@oCategoria.idCategoria">@oCategoria.nombre</option>
                                            }
                                            else
                                            {
                                                <option value="@oCategoria.idCategoria">@oCategoria.nombre</option>
                                            }

                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-12 col-md-6 col-lg-2">
                                <div class="wrap-input100 ¡ m-b-20" data-validate="">
                                    <select disabled id="select-Subcategoria" class="form-control input100" style="border:0px; height: 55px;" name="idSubCategoria">
                                        <option selected value="0">Subcategoria</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-12 col-md-6 col-lg-2">
                                <div class="wrap-input100 ¡ m-b-20" data-validate="">
                                    <select id="select-Estado" class="form-control input100" style="border:0px; height: 55px;" name="idEstado">
                                        <option selected value="0">Estado</option>

                                        @foreach (softcomputacion.Models.estado oEstado in lstEstados)
                                        {
                                            if (oEstado.idEstado.ToString() == filtros[3])
                                            {
                                                <option selected value="@oEstado.idEstado">@oEstado.nombre</option>
                                            }
                                            else
                                            {
                                                <option value="@oEstado.idEstado">@oEstado.nombre</option>
                                            }

                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-12 col-md-12 col-lg-1">
                                <div class="container-login100-form-btn m-b-20">
                                    <button class="login100-form-btn fs-22" style="height:56px;" type="submit">
                                        <i class="fas fa-search"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>



            <hr style="border-top: 1px solid #b5262a;" />
            <br />
        </div>
        <div class="row container-fluid">
            <!--Lista de Productos-->
            <div class="m-b-15 col-12 col-md-12 col-lg-8">
                @{
                    double PrecioContadoARS = 0;
                    double PrecioListaARS = 0;
                    double PrecioGremioARS = 0;
                    foreach (var oProducto in Model)
                    {
                        PrecioContadoARS = Convert.ToDouble(oProducto.precioContado);
                        PrecioListaARS = Convert.ToDouble(oProducto.precioLista);
                        PrecioGremioARS = Convert.ToDouble(oProducto.precioGremio);
                        if (oProducto.precioFijo == false)//precio guardado en USD
                        {
                            PrecioContadoARS = softcomputacion.Servicios.clsMetodosGenericos.ConvertirUSDaARS(PrecioContadoARS, ValorUSD);
                            PrecioListaARS = softcomputacion.Servicios.clsMetodosGenericos.ConvertirUSDaARS(PrecioListaARS, ValorUSD);
                            PrecioGremioARS = softcomputacion.Servicios.clsMetodosGenericos.ConvertirUSDaARS(PrecioGremioARS, ValorUSD);
                        }
                        stColorStock = softcomputacion.Servicios.srvEstado.ObtenerColorEstado(oProducto.idEstado);
                        if (oProducto.stockActual == 0)
                        {
                            stColorStock = "red";
                        }
                        <div id="div-@oProducto.idProducto" class="row item-tabla m-b-15">
                            <div class="col-12 col-sm-12 col-md-12 col-lg-6">
                                <p class="login100-form-title fs-18 p-l-5 text-left">
                                    <span id="spanNombreProducto-@oProducto.idProducto">
                                        <strong>@oProducto.categoria.nombre @oProducto.subcategoria.nombre - @oProducto.nombre</strong>
                                    </span>
                                </p>
                                <p class="text-center fs-18">
                                    <span>Stock:</span>
                                    <span id="spanActual-@oProducto.idProducto">
                                        <i id="iSpan-@oProducto.idProducto" style="color: @stColorStock" >@oProducto.stockActual</i>
                                    </span>
                                </p>
                            </div>
                            <div class="col-12 col-sm-6 col-md-6 col-lg-4">
                                <select id="select-precio-@oProducto.idProducto" class="form-control input100 p-l-5 p-r-5" name="idPrecio">
                                    <option selected value="@PrecioContadoARS">Contado: $@PrecioContadoARS</option>
                                    <option value="@PrecioListaARS">Lista: $@PrecioListaARS</option>
                                    <option value="@PrecioGremioARS">Gremio: $@PrecioGremioARS</option>
                                </select>
                            </div>
                            <div class="col-12 col-sm-12 col-md-6 col-lg-1 p-l-3 p-r-3">
                                <input class="form-control" id="cantidad-@oProducto.idProducto" style="text-align:center; width:100%;" type="number" name="cantidad" value="1">
                            </div>
                            <div class="col-12 col-md-12 col-lg-1 p-l-0 p-r-0">
                                @* post para agregar a la session de venta. *@
                                <div class="btn-group w-full" role="group">
                                    <button onclick="agregarACarrito(@oProducto.idProducto)" type="button" class="btn btn-outline-success" style="width:100%"><i class="fas fa-plus"></i></button>
                                </div>
                            </div>
                        </div>
                    }
                }
                <div class="row container-fluid text-center">
                    <div id="div-paginacion" class="col-12">
                        @Html.PagedListPager(Model, nroPagina => Url.Action("NuevaVenta", "Venta", new { nroPagina, tamañoPagina = Model.PageSize, paginacion = true }), new PagedListRenderOptions() { ClassToApplyToFirstListItemInPager = null, ClassToApplyToLastListItemInPager = null, UlElementClasses = new[] { "pagination", "justify-content-center" }, LiElementClasses = new[] { "page-item" } })
                    </div>
                    <div class="col-12">
                        @Model.FirstItemOnPage a @Model.LastItemOnPage productos de un total de @Model.TotalItemCount Productos.
                    </div>
                </div>
            </div>
            <div id="div-carrito" class="m-b-15 col-12 col-md-12 col-lg-4">
                @Html.Partial("_CarritoVenta")
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        $(document).ready(function () {
            $('#divRow i').each(function () {
                var id = $(this).attr('id').split('-');
                descontarStockAlRefrescar(id[2]);
            });
            
        });


    var stMoneda = "USD";

     function CargarComboSubcategoria() {
        var url = "@Url.Action("ObtenerSubcategoriaDeCategoria", "Producto")";
        var idCategoria = document.getElementById("select-Categorias").value;
        var data = { idCategoria: idCategoria };
        $.post(url, data).done(function (data) {
            if (data == "<option selected value=\"0\">Subcategoria</option>" | data == "") {
                document.getElementById("select-Subcategoria").innerHTML = "<option selected value=\"0\">Subcategoria</option>";
                document.getElementById("select-Subcategoria").setAttribute("disabled", "true");
            }
            else {
                document.getElementById("select-Subcategoria").innerHTML = data + "";
                document.getElementById("select-Subcategoria").removeAttribute("disabled");
            }
            if ('@filtros[2].ToString()' != "0" || filtros[2].ToString() != "") {
                $("#select-Subcategoria option[value=" + '@filtros[2].ToString()' + "]").attr("selected", true);
            }
        });
    }

        window.onload = CargarComboSubcategoria;


        function agregarACarrito(idProducto) {
            var url = "@Url.Action("_CarritoVenta", "Venta")";
            var precio = $('#select-precio-' + idProducto).val();
            var cantidad = $('#cantidad-' + idProducto).val();
            if (parseInt(cantidad) > 0 && parseInt(cantidad) <= parseInt($('#iSpan-' + idProducto).text())) {
                var data = { idProducto: idProducto, precio: precio, cantidad: cantidad };
                $.post(url, data).done(function (data) {
                    if (data != null) {
                        $('#div-carrito').html(data);
                        descontarStockDirecto(idProducto);
                    } else {
                        swal("Ocurrió un error", "Se produjo un error al intentar agregar un producto al carrito", "error");
                    }
                });
            } else {
                swal("Ocurrió un error", "La cantidad debe ser mayor a 0 y menor o igual al stock Actual", "error");
            }

    }

        function descontarStockDirecto(idProducto) {
            var stockActual = $('#iSpan-' + idProducto).text();
            var stockDescontar = $('#cantidad-' + idProducto).val();
            var stockEstimado = parseInt(stockActual) - parseInt(stockDescontar);
            $('#iSpan-' + idProducto).text(stockEstimado);
            if (stockEstimado == 0) {
                $('#iSpan-' + idProducto).css({ color: "red" });
            }
            
        }

        function descontarStockAlRefrescar(idProducto) {
            var stockActual = $('#iSpan-' + idProducto).text();
            var stockDescontar = $('#i-cant-' + idProducto).text();
            var stockEstimado = parseInt(stockActual) - parseInt(stockDescontar);
            $('#iSpan-' + idProducto).text(stockEstimado);
            if (stockEstimado == 0) {
                $('#iSpan-' + idProducto).css({ color: "red" });
            }  
            
        }
        
    </script>
}
